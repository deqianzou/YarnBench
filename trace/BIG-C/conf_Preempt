##this file is used to configure generator propertyes

hadoop.home =/home/admin/hadoop-2.7.1
spark.home  =/home/admin/spark-1.6.1-bin-hadoop2.6
hibench.home=/home/admin/tool/YarnBench/HiBench


jobs=hibench

user=admin

##run time(s)
runtime=900
hadoop.url = http://localhost:8088
##Hadoop Mapreduce job configure, Hadoop generator will randminly pick up one job to run
##   hadoop.jobs                     =wordcount,sort
##   hadoop.jobs.ratios              =1,2
##   hadoop.jobs.wordcount.jars      = ./a.jar
##   hadoop.jobs.wordcount.inputs    = /intput1,/input2
##   hadoop.jobs.wordcount.output    = /output
##   hadoop.jobs.wordcount.parameters= p1,p2,p3
##   hadoop.jobs.wordcount.keyvalues = k1:v1,k2:v2,k3:v3


##spark sql job configure
##   configure the possible path to store query 
sparksql.jobs.path             = /home/admin/apache-hive-2.0.0-bin/hive-testbench/sample-queries-tpch/

##   the final path to run query will be ./hive-test/query1
#sparksql.jobs                   = tpch_query1.sql , tpch_query3.sql , tpch_query5.sql , tpch_query6.sql , tpch_query7.sql,tpch_query8.sql,tpch_query9.sql,tpch_query10.sql,tpch_query11.sql,tpch_query12.sql,tpch_query13.sql,tpch_query14.sql,tpch_query15.sql,tpch_query18.sql,tpch_query19.sql


sparksql.jobs                    =tpch_query1.sql,tpch_query3.sql
#sparksql.jobs.ratios            = 1

sparksql.jobs.keyvalues         = --master:yarn, --executor-cores:4,--executor-memory:8G,--driver-memory:4G,--num-executors:4,--properties-file:/home/admin/spark-1.6.1-bin-hadoop2.6/conf/spark-defaults.conf,--jars:/home/admin/spark-1.6.1-bin-hadoop2.6/lib/mysql-connector-java-5.1.39-bin.jar,--database:tpch_flat_orc_10             

##for hibench job, the only property needed is jobs to list all wanted application
##We assume the input data has been generated by user

#hibench
#hibench.jobs       = pagerank
#hibench.jobs.types = spark
#hibench.jobs.ratios= 1

#terasort
hibench.jobs       = wordcount
hibench.jobs.types = mapreduce
hibench.jobs.ratios= 1


##configure for generators
generators =PoissonGenerator1,PoissonGenerator2

generator.OrderGenerator.jobs       =hibench
generator.OrderGenerator.order      =false
generator.OrderGenerator.round      =20
generator.OrderGenerator.range      =1 
generator.OrderGenerator.jobs.ratio =1
generator.OrderGenerator.queue      =default
generator.OrderGenerator.parameters.interval = 10
#

generator.PoissonGenerator1.jobs=hibench
generator.PoissonGenerator1.jobs.ratios=1
generator.PoissonGenerator1.queue=default
generator.PoissonGenerator1.sync=1
generator.PoissonGenerator1.parameters.interval=20000
generator.PoissonGenerator1.parameters.mean = 1
##for overhead evaluation
#generator.PoissonGenerator1.parameters.mean = 10

generator.PoissonGenerator2.jobs=sparksql
generator.PoissonGenerator2.jobs.ratios=1
generator.PoissonGenerator2.queue=fast

#fast dynamic
#generator.PoissonGenerator2.parameters.interval=6
#generator.PoissonGenerator2.parameters.mean=1
##for duration 900s
#generator.PoissonGenerator2.parameters.mean.slice=0.3:6,0.35:1,0.6:6,0.65:1
##for duration 8000s
#generator.PoissonGenerator2.parameters.mean.slice=0.3:6,0.307:1,0.8:6,0.807:1
##for duration 1750s
#generator.PoissonGenerator2.parameters.mean.slice=0.3:6,0.323:1,0.8:6,0.823:1
##for duration 4000s
#generator.PoissonGenerator2.parameters.mean.slice=0.3:6,0.314:1,0.8:6,0.814:1

#fast_high
#generator.PoissonGenerator2.parameters.interval=6
#generator.PoissonGenerator2.parameters.interval.slice=0.3:6,0.7:6
#generator.PoissonGenerator2.parameters.mean=1
#generator.PoissonGenerator2.parameters.mean.slice=0.3:4,0.4:3,0.5:2,0.7:1


##fast_low
generator.PoissonGenerator2.parameters.interval=6
generator.PoissonGenerator2.parameters.interval.slice=0.3:5,0.7:6
generator.PoissonGenerator2.parameters.mean=1
generator.PoissonGenerator2.parameters.mean.slice=0.3:2,0.7:1




#generator.CapacityGenerator.jobs      =hibench
#generator.CapacityGenerator.jobs.ratio=1
#generator.CapacityGenerator.queue     =default
#generator.CapacityGenerator.parameters.usedCapacity = 50
#generator.CaoacityGeneratir.parameters.usedCapacity.slice = 0.3:70,0.4,80 



generator.TraceGenerator1.jobs=hibench
generator.TraceGenerator1.queue=default
generator.TraceGenerator1.sync=1
generator.TraceGenerator1.ftrace=./trace/jlf
generator.TraceGenerator1.queue=default

generator.TraceGenerator2.jobs=sparksql
generator.TraceGenerator2.ftrace=./trace/jsf_1
generator.TraceGenerator2.queue=fast


