# identity
#=========
# Job
samza_workload_conf.identity.job.name                           identity

# Task
samza_workload_conf.identity.task.class                         com.intel.hibench.streambench.samza.micro.Identity
samza_workload_conf.identity.task.inputs                        kafka.${hibench.streamingbench.topic_name}

# Systems
samza_workload_conf.identity.systems.kafka.streams.${hibench.streamingbench.topic_name}.samza.offset.default                oldest


# wordcount
#==========
# Job
samza_workload_conf.wordcount.job.name                          wordcount

# Task
samza_workload_conf.wordcount.task.class                        com.intel.hibench.streambench.samza.micro.Wordcount
samza_workload_conf.wordcount.task.inputs                       kafka.${samza_internal.wordcount.kafka.input.name}

# kafka input name, hard coded, do not change
samza_internal.wordcount.kafka.input.name                       wordcount-source

# Systems
samza_workload_conf.wordcount.systems.kafka.streams.${samza_internal.wordcount.kafka.input.name}.samza.offset.default             oldest
samza_workload_conf.wordcount.systems.kafka.streams.${samza_internal.wordcount.kafka.input.name}.samza.key.serde                  string
samza_workload_conf.wordcount.systems.kafka.streams.${samza_internal.wordcount.kafka.input.name}.samza.msg.serde                  string

# statistics
#==========
# Job
samza_workload_conf.statistics.job.name                         statistics
samza_workload_conf.statistics.task.class                       com.intel.hibench.streambench.samza.micro.Statistics
samza_workload_conf.statistics.task.inputs                      kafka.${samza_internal.statistics.kafka.input.name}

# kafka input name, hard coded, do not change
samza_internal.statistics.kafka.input.name                                  numbers


# Systems
samza_workload_conf.statistics.systems.kafka.streams.${samza_internal.statistics.kafka.input.name}.samza.offset.default           oldest
samza_workload_conf.statistics.systems.kafka.streams.${samza_internal.statistics.kafka.input.name}.samza.key.serde                string
samza_workload_conf.statistics.systems.kafka.streams.${samza_internal.statistics.kafka.input.name}.samza.msg.serde                string

# distinctcount
#==========
# Job
samza_workload_conf.distinctcount.job.name                              distinctcount

# Task
samza_workload_conf.distinctcount.task.class                            com.intel.hibench.streambench.samza.micro.DistinctCount
samza_workload_conf.distinctcount.task.inputs                           kafka.${samza_internal.distinctcount.kafka.input.name}

# kafka input name, hard coded, do not change
samza_internal.distinctcount.kafka.input.name                           words

# Systems
samza_workload_conf.distinctcount.systems.kafka.streams.${samza_internal.distinctcount.kafka.input.name}.samza.offset.default           oldest
samza_workload_conf.distinctcount.systems.kafka.streams.${samza_internal.distinctcount.kafka.input.name}.samza.key.serde                string
samza_workload_conf.distinctcount.systems.kafka.streams.${samza_internal.distinctcount.kafka.input.name}.samza.msg.serde                string

# split
#==========
# Job
samza_workload_conf.split.job.name                                        split

# Task
samza_workload_conf.split.task.class                                      com.intel.hibench.streambench.samza.micro.Split
samza_workload_conf.split.task.inputs                                     kafka.${samza_internal.split.inputs}
samza_internal.split.inputs                                               ${hibench.streamingbench.topic_name}

# Systems
samza_workload_conf.split.systems.kafka.streams.${samza_internal.split.inputs}.samza.offset.default              oldest
samza_workload_conf.split.systems.kafka.streams.${samza_internal.split.inputs}.samza.key.serde                   string
samza_workload_conf.split.systems.kafka.streams.${samza_internal.split.inputs}.samza.msg.serde                   string
samza_workload_conf.split.systems.kafka.streams.words.samza.key.serde                        string
samza_workload_conf.split.systems.kafka.streams.words.samza.msg.serde                        string

# extract for distinctcount
#==========
#Job
samza_workload_conf.extractfordistinctcount.job.name                       extract-for-distinctcount

# Task
samza_workload_conf.extractfordistinctcount.task.class                                     com.intel.hibench.streambench.samza.micro.ExtractForDistinctcount
samza_workload_conf.extractfordistinctcount.task.inputs                                    kafka.${samza_internal.extractfordistinctcount.inputs}
samza_internal.extractfordistinctcount.inputs                                              ${hibench.streamingbench.topic_name}


# Systems
samza_workload_conf.extractfordistinctcount.systems.kafka.streams.${samza_internal.extractfordistinctcount.inputs}.samza.offset.default        oldest
samza_workload_conf.extractfordistinctcount.systems.kafka.streams.${samza_internal.extractfordistinctcount.inputs}.samza.key.serde             string
samza_workload_conf.extractfordistinctcount.systems.kafka.streams.${samza_internal.extractfordistinctcount.inputs}.samza.msg.serde             string
samza_workload_conf.extractfordistinctcount.systems.kafka.streams.numbers.samza.key.serde                 string
samza_workload_conf.extractfordistinctcount.systems.kafka.streams.numbers.samza.msg.serde                 string

# extract for statistics
#==========
#Job
samza_workload_conf.extractforstatistics.job.name                          extract-for-statistics

# Task
samza_workload_conf.extractforstatistics.task.class                                     com.intel.hibench.streambench.samza.micro.ExtractForStatistics
samza_workload_conf.extractforstatistics.task.inputs                                    kafka.${samza_internal.extractforstatistics.inputs}
samza_internal.extractforstatistics.inputs                                              ${hibench.streamingbench.topic_name}


# Systems
samza_workload_conf.extractforstatistics.systems.kafka.streams.${samza_internal.extractforstatistics.inputs}.samza.offset.default        oldest
samza_workload_conf.extractforstatistics.systems.kafka.streams.${samza_internal.extractforstatistics.inputs}.samza.key.serde             string
samza_workload_conf.extractforstatistics.systems.kafka.streams.${samza_internal.extractforstatistics.inputs}.samza.msg.serde             string
samza_workload_conf.extractforstatistics.systems.kafka.streams.numbers.samza.key.serde                 string
samza_workload_conf.extractforstatistics.systems.kafka.streams.numbers.samza.msg.serde                 string


# project
#========
samza_workload_conf.project.job.name                                    project

# Task
samza_workload_conf.project.task.class                                  com.intel.hibench.streambench.samza.micro.Projection
samza_workload_conf.project.task.inputs                                 kafka.${hibench.streamingbench.topic_name}

# Systems
samza_workload_conf.project.systems.kafka.streams.${hibench.streamingbench.topic_name}.samza.offset.default             oldest


# metrics
#==========
# metrics 
samza_workload_conf.metrics.job.factory.class                           org.apache.samza.job.local.ThreadJobFactory
samza_workload_conf.metrics.job.name                                    count-metrics

# Task
samza_workload_conf.metrics.task.class                                  com.intel.hibench.streambench.samza.metrics.CountMetrics
samza_workload_conf.metrics.task.inputs                                 kafka.metrics
samza_workload_conf.metrics.task.command.class                          org.apache.samza.job.ShellCommandBuilder

# Serializers
samza_workload_conf.metrics.serializers.registry.json.class             org.apache.samza.serializers.JsonSerdeFactory
samza_workload_conf.metrics.serializers.registry.metrics.class          org.apache.samza.serializers.MetricsSnapshotSerdeFactory
samza_workload_conf.metrics.serializers.registry.string.class           org.apache.samza.serializers.StringSerdeFactory

# Systems
samza_workload_conf.metrics.systems.kafka.samza.factory                 org.apache.samza.system.kafka.KafkaSystemFactory
#systems.kafka.samza.msg.serde=string
samza_workload_conf.metrics.systems.kafka.streams.metrics.samza.msg.serde       metrics
samza_workload_conf.metrics.systems.kafka.consumer.zookeeper.connect            ${hibench.streamingbench.zookeeper.host}
samza_workload_conf.metrics.systems.kafka.consumer.auto.offset.reset            largest
samza_workload_conf.metrics.systems.kafka.producer.bootstrap.servers            ${hibench.streamingbench.brokerList}
samza_workload_conf.metrics.systems.kafka.producer.metadata.broker.list         ${hibench.streamingbench.brokerList}
